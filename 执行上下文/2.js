/*
  2、活动对象和变量对象
  变量对象是与执行环境相关联的数据作用域，存储了在该执行环境中定义的变量和函数声明

  当某个环境还未执行时，变量对象中的属性都是不能访问的。进入执行阶段以后，变量对象转变为了活动对象，该对象中的属性和方法都可以被访问了。所以说变量对象和活动对象其实是同一个对象，只是处于执行环境的不同生命周期

  简单说就是，变量对象激活以后变成了活动对象，活动对象中的各种属性才能被访问。

  2-1、创建执行环境
  只是创建了执行环境，还没有执行代码。此时，变量对象包括：
  （1）、函数的所有形参（针对函数执行环境）
      arguments对象会作为变量对象的第一个属性
      形参作为变量对象的属性名，属性值为undefined

  （2）、变量声明
      变量名作为变量对象的属性名，属性值是undefined
      如果变量名跟形式参数或函数名相同，则变量声明不会影响已经存在的这类属性
  
  （3）、函数声明
      变量名作为变量对象的属性名，属性值是函数体
      如果变量对象已经存在相同名称的属性，则完全替换该属性（同名函数的权值大于变量）
  
  2-2、执行函数
  执行函数时，会自上而下逐行执行代码，修改变量对象的值

  function fn(a) {
    var b = 1;
    var c = function() {
      console.log('ccc');
    }
    function d () {
      console.log('ddd');
    }
    b = 0;
  }

  fn(6);

  // 如图4

  总结：
  （1）、全局执行环境的变量对象初始化是全局对象
  （2）、函数执行环境的变量对象初始化只包含 arguments对象
  （3）、在进入执行环境时，会给变量对象的属性赋初始值
  （4）、在代码执行阶段，会再次修改变量对象的属性值

*/
  